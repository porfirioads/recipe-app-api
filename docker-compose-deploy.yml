version: "3.9"

services:
  api:
    build:
      context: .
    restart: always
    volumes:
      - ./:/app
      - static-data:/vol/web
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on:
      - postgres
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             uwsgi --socket :9000 --workers 4 --master --enable-threads --module recipe_app_api.wsgi"

  postgres:
    image: postgres:14.2-alpine
    restart: on-failure
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./scripts/create-test-database.sh:/docker-entrypoint-initdb.d/create-test-database.sh

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - api
    ports:
      - 80:8000
    volumes:
      - static-data:/vol/static

volumes:
  postgres-data:
  static-data:
